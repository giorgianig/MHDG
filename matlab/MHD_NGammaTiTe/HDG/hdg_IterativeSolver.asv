function [sol iter ] = hdg_IterativeSolver(K, ff, nvUnk,u0,p0,nv)

% setup matrices
F = K(1:nvUnk,1:nvUnk);
B = K(nvUnk+1:end,1:nvUnk);
f = ff(1:nvUnk);
g = ff(nvUnk+1:end);

% iterative solver parameters
maxIter = 1000;
tol = 1e-9;

% initialize
res_u = 1;
res_p = 1;
p_k = p0;
u_k = u0;
iter = 0;

%% SIMPLE
% D = sparse(diag(diag(F)));
% invD = inv(D);
% while res_u>tol && res_p>tol && iter < maxIter
% 
%     u_star = F\(f - B'*p_k);
%     p_prime = -(B*invD*B')\(g-B*u_star);
%     u_kp1 = u_star - invD*B'*p_prime;
%     p_kp1 = p_k+p_prime;
%     iter = iter+1;
%     res_u = max(abs(u_kp1-u_k ));
%     res_p = max(abs(p_kp1-p_k ));
%     
%     % update
%     u_k = u_kp1;
%     p_k = p_kp1;
%     if any(abs(u_k)>1e3)
%        error('Diverging') 
%     end
% %     disp(['Residual u: ' num2str(res_u) '-- Residual p: ' num2str(res_p)])
% end

%% SIMPLE variation
% nBlocks = size(F,1)/nv;
% invD = zeros(size(F));
% for iblock = 1:nBlocks
%     ind = (iblock-1)*nv+(1:nv);
%     invD(ind,ind) = inv(F(ind,ind));
% end
% while res_u>tol && res_p>tol && iter < maxIter
% 
%     u_star = F\(f - B'*p_k);
%     p_prime = -(B*invD*B')\(g-B*u_star);
%     u_kp1 = u_star - invD*B'*p_prime;
%     p_kp1 = p_k+p_prime;
%     iter = iter+1;
%     res_u = max(abs(u_kp1-u_k ));
%     res_p = max(abs(p_kp1-p_k ));
%     
%     % update
%     u_k = u_kp1;
%     p_k = p_kp1;
%     if any(abs(u_k)>1e3)
%        error('Diverging') 
%     end
% %     disp(['Residual u: ' num2str(res_u) '-- Residual p: ' num2str(res_p)])
% end

%% SIMPLER
D = sparse(diag(diag(F)));
invD = inv(D);
while res_u>tol && res_p>tol && iter < maxIter

    p_k = -(B*invD*B')\(g-B*invD*((D-F)*u_k +f));
    u_star = F\(f - B'*p_k);
    p_prime = -(B*invD*B')\(g-B*u_star);
    u_kp1 = u_star - invD*B'*p_prime;
    p_kp1 = p_k+p_prime;
    iter = iter+1;
    res_u = max(abs(u_kp1-u_k ));
    res_p = max(abs(p_kp1-p_k ));
    
    % update
    u_k = u_kp1;
    if any(abs(u_k)>1e3)
       error('Diverging') 
    end
%     disp(['Residual u: ' num2str(res_u) '-- Residual p: ' num2str(res_p)])
end

%%
if iter == maxIter
    error('Linear system not converging')
end
disp(['Linear solver iterations: ' num2str(iter)])
sol = [u_kp1; p_kp1];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% GMRES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
fzd = find( diag(K)==0,1); % first zero in the diagonal
perPrec = [symrcm(K(1:fzd-1,1:fzd-1)), fzd:size(K,1)];
[Lprecond,Uprecond] = luinc(K(perPrec,perPrec),1e-4);
tol = 1e-9;
[sol,flag,relres,iter,resvec] = gmres(K(perPrec,perPrec),f(perPrec),20,tol,maxIter,Lprecond,Uprecond,[u0;p0]);
